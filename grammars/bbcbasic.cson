'fileTypes': [
  'bas'
  'BAS'
]
'name': 'BBC Basic'
'patterns': [
  {
    'match': '\\b(?i:(P\.|ELSE|THEN|WHILE|CASE|ENDCASE|ENDWHILE|ENDIF|OTHERWISE|END|TO|SOUND|BPUT|CALL|CHAIN|CLEAR|CLOSE|CLG|CLS|DATA|DEF|DIM|DRAW|END|ENDPROC|ENVELOPE|FOR|GOSUB|GOTO|GCOL|IF|INPUT|LET|LOCAL|MODE|MOVE|NEXT|ON|VDU|PLOT|PRINT|PROC|READ|REPEAT|REPORT|REPORT$|RESTORE|RETURN|RUN|STOP|COLOUR|COLOR|TRACE|UNTIL|WIDTH|OSCLI|PRINT|P\\.|CIRCLE|ELLIPSE|FILL|MOUSE|ORIGIN|QUIT|RECTANGLE|SWAP|SYS|TINT|WAIT|INSTALL|PRIVATE|BY|EXIT|ERROR|LINE|OFF|STEP|SPC|TAB|OPENIN|PTR|PAGE|TIME|TIME$|LOMEM|HIMEM|ABS|ACS|ADVAL|ASC|ASN|ATN|BGET|COS|COUNT|DEG|ERL|ERR|EVAL|EXP|EXT|FALSE|GET|INKEY|INSTR|INT|LEN|LN|LOG|NOT|OPENUP|OPENOUT|PI|POINT|POS|RAD|RND|SGN|SIN|SQR|TAN|TOP|TRUE|USR|VAL|VPOS|CHR\$|GET$|INKEY$|LEFT$|MID$|RIGHT$|STR$|STRING$|A\\.|AU\\.|B\\.|BP\\.|CA\\.|CH\\.|CHR\\.|CL\\.|CLO\\.|C\\.|COU\\.|D\\.|DEL\\.|DR\\.|E\\.|EL\\.|END\\.|ENV\\.|EV\\.|FA\\.|F\\.|GC\\.|G\\.|H\\.|INK\\.|I\\.|INS\\.|L\\.|LO\\.|LOC\\.|LOM\\.|M\\.|MO\\.|MOV\\.|N\\.|O\\.|OP\\.|OPENO\\.|OPENU\\.|PA\\.|PL\\.|PO\\.|P.|PRO\\.|PT\\.|REA\\.|REN\\.|REP\\.|REPO\\.|RES\\.|R\\.|RI\\.|SA\\.|SO\\.|S\\.|STO\\.|STR\\.|STRI\\.|T\\.|TH\\.|TI\\.|TR\\.|U\\.|V\\.|VP\\.|W\\.))\\b'
    'name': 'keyword.control.bbcbasic'
  }
  {
    'captures':
      '1':
        'name': 'storage.type.prototype.bbcbasic'
      '2':
        'name': 'entity.name.function.prototype.bbcbasic'
    'match': '\\b(?i:(DEF|PROC|DEFPROC))\\b\\s+(\\w+(\\.\\w+)?)(\\(.*?\\))?;\\s*(?=(?i:attribute|forward|external))'
    'name': 'meta.function.prototype.bbcbasic'
  }
  {
    'captures':
      '1':
        'name': 'storage.type.function.bbcbasic'
      '2':
        'name': 'entity.name.function.bbcbasic'
    'match': '\\b(?i:(DEF|PROC|DEFPROC))\\b\\s+(\\w+(\\.\\w+)?)'
    'name': 'meta.function.bbcbasic'
  }
  {
    'match': '\\b((0(x|X)[0-9a-fA-F]*)|(([0-9]+\\.?[0-9]*)|(\\.[0-9]+))((e|E)(\\+|-)?[0-9]+)?)(L|l|UL|ul|u|U|F|f|ll|LL|ull|ULL)?\\b'
    'name': 'constant.numeric.bbcbasic'
  }
  # {
  #   'match': '\\b(?i:(REM))\\b'
  #   'name': 'comment.line.bbcbasic'
  # }
  {
    match: '(REM)(.*)'
    captures:
        1:
          name: 'keyword.rem.bbc'
        2:
          name: 'comment.line.bbc'
    }
  # {
  #   'begin': '(^[ \\t]+)?(?=//)'
  #   'beginCaptures':
  #     '1':
  #       'name': 'punctuation.whitespace.comment.leading.pascal'
  #   'end': '(?!\\G)'
  #   'patterns': [
  #     {
  #       'begin': '//'
  #       'beginCaptures':
  #         '0':
  #           'name': 'punctuation.definition.comment.pascal'
  #       'end': '\\n'
  #       'name': 'comment.line.double-slash.pascal.two'
  #     }
  #   ]
  # }
  # {
  #   'begin': '\\(\\*'
  #   'captures':
  #     '0':
  #       'name': 'punctuation.definition.comment.pascal'
  #   'end': '\\*\\)'
  #   'name': 'comment.block.pascal.one'
  # }
  # {
  #   'begin': '\\{'
  #   'captures':
  #     '0':
  #       'name': 'punctuation.definition.comment.pascal'
  #   'end': '\\}'
  #   'name': 'comment.block.pascal.two'
  # }
  # {
  #   'begin': '"'
  #   'beginCaptures':
  #     '0':
  #       'name': 'punctuation.definition.string.begin.pascal'
  #   'comment': 'Double quoted strings are an extension and (generally) support C-style escape sequences.'
  #   'end': '("|\\n)'
  #   'endCaptures':
  #     '0':
  #       'name': 'punctuation.definition.string.end.pascal'
  #   'name': 'string.quoted.double.pascal'
  #   'patterns': [
  #     {
  #       'match': '\\\\.'
  #       'name': 'constant.character.escape.pascal'
  #     }
  #   ]
  # }
  # {
  #   'applyEndPatternLast': 1
  #   'begin': '\''
  #   'beginCaptures':
  #     '0':
  #       'name': 'punctuation.definition.string.begin.pascal'
  #   'end': '(\'|\\n)'
  #   'endCaptures':
  #     '0':
  #       'name': 'punctuation.definition.string.end.pascal'
  #   'name': 'string.quoted.single.pascal'
  #   'patterns': [
  #     {
  #       'match': '\'\''
  #       'name': 'constant.character.escape.apostrophe.pascal'
  #     }
  #   ]
  # }
]
'scopeName': 'source.bbcbasic'
